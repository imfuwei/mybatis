<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE configuration
PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
	<!-- 配置运行环境 -->
	<!-- environments的default的值是指你要用哪个environment
	比如，有两个environment,一个enviroment的id为test01,一个是test02,
	如果environments的default的值如果是test01,那么这个运行环境就是id为test01的environment
	如果environments的default的值如果是test02,那么这个运行环境就是id为test02的environment
	为什么要这样?
	你有可能会在test01的environment的数据库是mysql,但你又想测orcal的数据库，
	又或者你url连接有参数
	所以就给你这样的形式，让你去测试
 -->
 	<environments default="test02">
 	
		<!-- 没有参数的url 的运行环境-->
		<environment id="test01">
			<!-- 事务管理器 ,有两个值，一个是JDBC，是采用JDBC的事务管理机制,一个是MANAGED，由容器来管理事务的整个生命周期(如Spring容器) -->
			<transactionManager type="JDBC"></transactionManager>
			<dataSource type="POOLED">
				<!-- 可以在帮助文档中config约束中找到这些name的值 -->
				<property name="driver" value="com.mysql.jdbc.Driver" />
				<property name="url" value="jdbc:mysql:///zfw" />
				<property name="username" value="root" />
				<property name="password" value="123" />
			</dataSource>
		</environment>
		<!-- 有参数的url 的运行环境-->
		<environment id="test02">
			<!-- 事务管理器 ,有两个值，一个是JDBC，是采用JDBC的事务管理机制,一个是MANAGED，由容器来管理事务的整个生命周期(如Spring容器) -->
			<transactionManager type="JDBC"></transactionManager>
			<dataSource type="POOLED">
				<!-- 可以在帮助文档中config约束中找到这些name的值 -->
				<property name="driver" value="com.mysql.jdbc.Driver" />
				<property name="url" value="jdbc:mysql:///zfw?useSSL=true&amp;&amp;characterEncoding=utf-8" />
				<property name="username" value="root" />
				<property name="password" value="123" />
			</dataSource>
		</environment>
	</environments>
	<!-- 注册映射文件 -->
	<mappers>
		<mapper resource="com/zfw/dao/mapper.xml"/>
	</mappers>
	
</configuration>